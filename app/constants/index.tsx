import { faker, random, arrayElement } from '@faker-js/faker';
export const defaultSymbols = [{
    "proName": "FOREXCOM:SPXUSD",
    "title": "S&P 500"
  },
  {
    "proName": "FOREXCOM:NSXUSD",
    "title": "US 100"
  },
  {
    "proName": "FX_IDC:EURUSD",
    "title": "EUR to USD"
  },
  {
    "description": "",
    "proName": "NASDAQ:MSFT"
  },
  {
    "description": "SALESFORCE",
    "proName": "NYSE:CRM"
  },
  {
    "description": "NIKE",
    "proName": "NYSE:NKE"
  },
  {
    "description": "DISNEY",
    "proName": "NYSE:DIS"
  },
  {
    "description": "B OF A",
    "proName": "NYSE:BAC"
  },
  {
    "description": "DOW JONES",
    "proName": "BLACKBULL:US30"
  },
  {
    "description": "INTUIT",
    "proName": "NASDAQ:INTU"
  },
  {
    "description": "AMAZON",
    "proName": "NASDAQ:AMZN"
  }
];

export const generateRandomFinancialData = (length: number, symbol: string) => {
  const startDate = new Date('2023-01-01');
  const data = [];

  for (let i = 0; i < length; i++) {
    const currentDate = new Date(startDate.getTime() + i * 24 * 60 * 60 * 1000);
    data.push({
      t: currentDate.toISOString(), // Use ISO string for the timestamp
      o: faker.finance.amount({ min: 800, max: 1200, decimal: 2 }), // Opening price
      h: faker.finance.amount({ min: 800, max: 1200, decimal: 2 }), // High price
      l: faker.finance.amount({ min: 700, max: 1100, decimal: 2 }), // Low price
      c: faker.finance.amount({ min: 800, max: 1200, decimal: 2 }), // Closing price
    });
  }

  return {
    label: `${symbol} Stock`,
    data,
    borderColor: faker.internet.color(),
    backgroundColor: faker.internet.color(),
  };
};

const generateRandomSymbol = () => {
  const length = faker.random.number({ min: 3, max: 5 });
  const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  const numbers = '0123456789';

  let symbol = '';
  for (let i = 0; i < length; i++) {
    if (i === 0) {
      symbol += faker.random.arrayElement(letters); // Ensure the first character is a letter
    } else {
      symbol += faker.random.arrayElement([...letters, ...numbers]);
    }
  }

  return symbol;
};

export const generateChartData = (numSymbols: number, dataLength: number) => {
  const symbols = defaultSymbols.slice(0, numSymbols).map((symbol) => symbol.proName);
  return {
    labels: Array.from({ length: dataLength }, (_, index) => new Date(new Date().setMonth(new Date().getMonth() - index))),
    datasets: symbols.map((symbol) => generateRandomFinancialData(dataLength, symbol)),
  };
};

export function acme_corp_data() {
    return [
        [Date.UTC(2021, 7, 7), 22.258032033902, 25.4889359321959, 22.75, 23.7, 22.69, 23.44, 23.335, 20215300],
        [Date.UTC(2021, 7, 6), 22.2381666799343, 25.3786666401314, 23.03, 23.15, 22.44, 22.97, 23.285, 28948000],
        [Date.UTC(2021, 7, 3), 22.2646752576289, 25.3541494847422, 23.2, 23.39, 22.87, 22.92, 23.2945, 19702100],
        [Date.UTC(2021, 7, 2), 22.351151387828, 25.293697224344, 22.65, 23.7, 22.65, 23.36, 23.332, 21098900],
        [Date.UTC(2021, 7, 1), 22.4525580936985, 25.195883812603, 23.17, 23.4, 22.85, 23.25, 23.367, 22030400],
        [Date.UTC(2021, 6, 31), 22.5727587647169, 25.0649824705663, 23.88, 23.93, 23.24, 23.25, 23.4035, 21575800],
        [Date.UTC(2021, 6, 30), 22.615611475491, 25.0677770490181, 23.55, 23.88, 23.38, 23.62, 23.433, 20976600],
        [Date.UTC(2021, 6, 27), 22.6132951454669, 25.0574097090663, 23.98, 24.49, 23.47, 23.49, 23.428, 35783800],
        [Date.UTC(2021, 6, 26), 22.6301690560976, 25.1586618878048, 24.4, 24.49, 23.62, 24.03, 23.473, 33373300],
        [Date.UTC(2021, 6, 25), 22.5611733265837, 25.5141533468326, 25.01, 25.32, 24.59, 24.68, 23.5455, 21882400],
        [Date.UTC(2021, 6, 24), 22.5307199313896, 25.8450601372208, 24.8, 25.34, 24.73, 24.84, 23.6355, 28981000],
        [Date.UTC(2021, 6, 23), 22.4759114363302, 26.2021771273396, 25.43, 25.46, 24.98, 24.99, 23.718, 26631500],
        [Date.UTC(2021, 6, 20), 22.3814852838885, 26.6625294322229, 25.7, 25.89, 25.2, 25.35, 23.8085, 38056100],
        [Date.UTC(2021, 6, 19), 22.329872112167, 27.2562557756661, 26.32, 26.34, 25.92, 26.03, 23.972, 29537900],
        [Date.UTC(2021, 6, 18), 22.2394563687459, 27.8690872625082, 26.07, 26.72, 26.02, 26.2, 24.116, 65125900],
        [Date.UTC(2021, 6, 17), 21.9240703578069, 29.0713592843861, 26.74, 27.8, 26.7, 27.53, 24.3065, 53656100],
        [Date.UTC(2021, 6, 16), 21.812522351567, 29.613955296866, 26.48, 26.74, 26.13, 26.7, 24.413, 30804500],
        [Date.UTC(2021, 6, 13), 21.7905091214527, 30.0539817570947, 26.87, 26.97, 26.5, 26.58, 24.545, 18522700],
        [Date.UTC(2021, 6, 12), 21.7801924456099, 30.5486151087802, 26.7, 26.97, 26.34, 26.96, 24.703, 20082300],
        [Date.UTC(2021, 6, 11), 21.8250372642247, 30.8819254715507, 27.03, 27.05, 26.55, 26.69, 24.844, 21970700],
        [Date.UTC(2021, 6, 10), 21.9384132069328, 31.1846735861345, 27.09, 27.57, 26.96, 26.97, 25.0205, 24635500],
        [Date.UTC(2021, 6, 9), 22.161256767491, 31.3734864650181, 26.92, 27.33, 26.82, 27.2, 25.232, 17515800],
        [Date.UTC(2021, 6, 6), 22.4604705168376, 31.4020589663248, 27.01, 27.14, 26.93, 27.1, 25.441, 12284500],
        [Date.UTC(2021, 6, 5), 22.7301730821014, 31.4071538357971, 26.92, 27.14, 26.9, 26.99, 25.6225, 16071900],
        [Date.UTC(2021, 6, 3), 23.075282464312, 31.279435071376, 26.95, 27.25, 26.9, 27, 25.81, 11643400],
        [Date.UTC(2021, 6, 2), 23.4888727296016, 30.9937545407968, 27.19, 27.27, 26.76, 26.86, 25.9905, 21011000],
        [Date.UTC(2021, 5, 29), 23.8701829341171, 30.7576341317659, 27.21, 27.38, 26.93, 27.13, 26.166, 13842500],
        [Date.UTC(2021, 5, 28), 24.37101840654, 30.3199631869199, 27.44, 27.49, 27.12, 27.25, 26.354, 17124500],
        [Date.UTC(2021, 5, 27), 24.791784218615, 30.01093156277, 27.51, 27.66, 27.4, 27.58, 26.5315, 13997000],
        [Date.UTC(2021, 5, 26), 25.0933572728443, 29.8622854543115, 27.73, 28.18, 27.36, 27.71, 26.683, 25324000],
        [Date.UTC(2021, 5, 25), 25.425715490675, 29.61756901865, 27.6, 27.77, 27.34, 27.64, 26.823, 21232200],
        [Date.UTC(2021, 5, 22), 25.8087650221504, 29.2099699556992, 27.68, 27.79, 27.31, 27.38, 26.9425, 33796900],
        [Date.UTC(2021, 5, 21), 26.1473627984766, 28.8807744030469, 27.69, 27.94, 27.55, 27.67, 27.0585, 17885800],
        [Date.UTC(2021, 5, 20), 26.3248926451067, 28.7702147097866, 27.89, 28.17, 27.66, 27.66, 27.14, 33496400],
        [Date.UTC(2021, 5, 19), 26.4936901365961, 28.6471197268079, 29.4, 29.4, 27.54, 27.63, 27.2115, 65967500],
        [Date.UTC(2021, 5, 18), 26.4307185674103, 28.8615628651793, 27.72, 28.34, 27.5, 28.12, 27.241, 70919400],
        [Date.UTC(2021, 5, 15), 26.4999748869929, 28.8145502260142, 27.49, 27.52, 27.19, 27.31, 27.2715, 23816900],
        [Date.UTC(2021, 5, 14), 26.6042255158895, 28.7140489682209, 27.38, 27.64, 27.15, 27.3, 27.3075, 18919400],
        [Date.UTC(2021, 5, 13), 26.6431307564529, 28.6992384870942, 27.12, 27.41, 26.61, 27.38, 27.3285, 31210700],
        [Date.UTC(2021, 5, 12), 26.7121412686811, 28.6152174626379, 27.3, 27.66, 26.98, 27.05, 27.3465, 22203600],
        [Date.UTC(2021, 5, 11), 26.7550747383997, 28.5863505232005, 27.27, 27.52, 27.15, 27.35, 27.3655, 14856500],
        [Date.UTC(2021, 5, 8), 26.7692772911645, 28.5864454176711, 27.02, 27.45, 26.96, 27.39, 27.375, 18618500],
        [Date.UTC(2021, 5, 7), 26.7502625758866, 28.6064748482268, 27.34, 27.73, 26.98, 26.98, 27.369, 34232300],
        [Date.UTC(2021, 5, 6), 26.7972853923045, 28.5799292153909, 28.05, 28.11, 27.3, 27.44, 27.3915, 33508200],
        [Date.UTC(2021, 5, 5), 26.783728754541, 28.791542490918, 28.4, 28.59, 28.1, 28.23, 27.453, 20494800],
        [Date.UTC(2021, 5, 4), 26.7608993321351, 29.0967013357298, 28.6, 28.78, 28.4, 28.59, 27.5395, 13428800],
        [Date.UTC(2021, 5, 1), 26.6982987495954, 29.4694025008091, 28.9, 29.13, 28.61, 28.78, 27.622, 12398800],
        [Date.UTC(2021, 4, 31), 26.6761979819332, 29.7311040361336, 28.76, 28.85, 28.49, 28.7, 27.6945, 15859100],
        [Date.UTC(2021, 4, 30), 26.6753026623903, 29.8528946752193, 28.19, 28.38, 28, 28, 27.7345, 16046800],
        [Date.UTC(2021, 4, 29), 26.6710036429932, 29.9649927140135, 28.36, 28.73, 28.2, 28.4, 27.769, 13981500],
        [Date.UTC(2021, 4, 25), 26.6649239816591, 30.1181520366818, 28.44, 28.73, 28.34, 28.58, 27.816, 10334600],
        [Date.UTC(2021, 4, 24), 26.7069333280674, 30.1886333438653, 28.65, 28.88, 28.25, 28.41, 27.8675, 19122900],
        [Date.UTC(2021, 4, 23), 26.7142754376783, 30.3149491246434, 29.1, 29.37, 28.53, 28.61, 27.9145, 27964400],
        [Date.UTC(2021, 4, 22), 26.7071004565491, 30.5182990869018, 29.33, 29.35, 28.78, 28.92, 27.9775, 19131300],
        [Date.UTC(2021, 4, 21), 26.6717633151346, 30.8469733697308, 29.62, 29.86, 29.32, 29.35, 28.0635, 18955900],
        [Date.UTC(2021, 4, 18), 26.5706493402039, 31.2937013195923, 28.9, 29.8, 28.78, 29.75, 28.145, 35487200],
        [Date.UTC(2021, 4, 17), 26.671971354434, 31.2800572911321, 28.99, 29.13, 28.49, 28.57, 28.208, 23535000],
        [Date.UTC(2021, 4, 16), 26.7676578857188, 31.3751842285624, 28.89, 29.37, 28.25, 29.21, 28.3035, 32944800],
        [Date.UTC(2021, 4, 15), 26.885335608266, 31.354328783468, 29.16, 29.42, 28.75, 28.81, 28.375, 22226800],
        [Date.UTC(2021, 4, 14), 27.0767083929953, 31.3105832140094, 29.79, 30, 29.08, 29.5, 28.488, 20895900],
        [Date.UTC(2021, 4, 11), 27.1574611912334, 31.5540776175331, 29.62, 30.08, 29.53, 30.05, 28.62, 138388003]
    ]
}